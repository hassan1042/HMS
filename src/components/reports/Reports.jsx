import { useState } from 'react';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';
import { getBookingsByDateRange } from '../../services/reportsService';
import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import logo from '../../assets/common/magnum.png';

const ReportsPage = () => {
  const [activeTab, setActiveTab] = useState('Food Orders');
  const [startDate, setStartDate] = useState(null);
  const [endDate, setEndDate] = useState(null);
  const [bookings, setBookings] = useState([]);

  const fetchBookings = async () => {
    if (!startDate || !endDate) {
      alert("Please select both start and end dates.");
      return;
    }
    const filteredBookings = await getBookingsByDateRange(activeTab, startDate, endDate);
    setBookings(filteredBookings);
    console.log(bookings)
  };


  const handleDownloadReport = (booking) => {
    const doc = new jsPDF();
  
    // Add logo and contact details at the top
    const logoUrl = logo; // Replace with your logo path or URL
    const phoneNumber = "123-456-7890";
    const email = "info@example.com";
  
    doc.addImage(logoUrl, "PNG", 10, 10, 30, 30);
    doc.setFontSize(12);
    doc.text("Phone: " + phoneNumber, 50, 20);
    doc.text("Email: " + email, 50, 30);
  
    // Add a separator line
    doc.setLineWidth(0.5);
    doc.line(10, 40, 200, 40);
  
    // Title of the report
    doc.setFontSize(16);
    doc.text(`Report for ${activeTab} of Magnum Hotel`, 10, 50);
  
    // Add table with booking details
    doc.autoTable({
      startY: 60,
      head: [["Name", "Date", "Status", "Contact"]],
      body: bookings.map((booking) => [
        booking.name,
        new Date(booking.applyDate.seconds * 1000).toLocaleDateString(),
        booking.status,
        booking.contact,
      ]),
    });
  
    // Add footer details
    const pageHeight = doc.internal.pageSize.height;
    doc.setLineWidth(0.5);
    doc.line(10, pageHeight - 20, 200, pageHeight - 20);
    doc.setFontSize(10);
    doc.text(
      "Generated by MHMS - Magnum Hostel Management System Â© 2024",
      10,
      pageHeight - 10
    );
  
    // Save the PDF
    doc.save(`${activeTab}-report.pdf`);
  };

 

  return (
    <div className="p-6">
      <div className="flex gap-4 mb-4">
        {['Food Orders', 'Rental Orders', 'Room Orders', 'Hall Orders'].map((tab) => (
          <button
            key={tab}
            onClick={() => setActiveTab(tab)}
            className={`px-4 py-2 text-white rounded-[50px] ${
              tab === activeTab ? 'bg-blue-600' : 'bg-gray-400'
            }`}
          >
            {tab}
          </button>
        ))}
      </div>

      <div className="flex gap-4 items-center mb-6">
        <div>
          <label className="block font-semibold mb-1">Start Date:</label>
          <DatePicker maxDate={endDate} selected={startDate} onChange={(date) => setStartDate(date)} className="border p-2 rounded" />
        </div>
        <div>
          <label className="block font-semibold mb-1">End Date:</label>
          <DatePicker minDate={startDate} selected={endDate} onChange={(date) => setEndDate(date)} className="border p-2 rounded" />
        </div>
        <button onClick={fetchBookings} className="bg-green-500 text-white px-4 py-2 rounded">
          Generate Report
        </button>
      </div>

      <div className="flex gap-4 mb-6">
        <button onClick={handleDownloadReport} className="bg-blue-500 text-white px-4 py-2 rounded">
          Download Report
        </button>
      
      </div>

      <div className="p-6 bg-gray-100 min-h-screen">
      <h2 className="text-2xl font-bold text-center mb-6">Booking Report</h2>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {bookings.map((booking) => (
          <div
            key={booking.id}
            className="border p-6 rounded-lg shadow-lg bg-white hover:shadow-xl transition-shadow duration-300"
          >
            <h4 className="text-xl font-semibold mb-2 text-gray-800">
              {booking.name}
            </h4>
            <p className="text-gray-600 mb-1">
              <span className="font-medium">Status:</span> {booking.status}
            </p>
            <p className="text-gray-600 mb-1">
              <span className="font-medium">Contact:</span> {booking.contact}
            </p>
            <p className="text-gray-600 mb-1">
              <span className="font-medium">Applied Date:</span>{" "}
              {new Date(booking.applyDate.seconds * 1000).toLocaleDateString()}
            </p>
          
          </div>
        ))}
      </div>
    </div>
    </div>
  );
};

export default ReportsPage;
